{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport global from \"../global.js\";\nimport { StackActions } from '@react-navigation/native';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    } else {\n      var token = '';\n      var data = {\n        email: email.value,\n        password: password.value\n      };\n      fetch('http://159.89.153.162:5000/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.success !== undefined && json.success === false) {\n          if (json.error === \"Invalid credentials - username.\") {\n            setEmail({\n              value: email.value,\n              error: 'Invalid Email'\n            });\n          } else if (json.error === \"Invalid credentials - password.\") {\n            setPassword({\n              value: password.value,\n              error: 'Invalid Password'\n            });\n          }\n        } else {\n          global.Token = json.token;\n        }\n      }).then(function () {\n        return _getUser(global.Token);\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        global.User = json.data;\n      }).then(function () {\n        return _getProfile(global.Token);\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success !== undefined && json.success === false) {\n          global.Profile = {\n            homePhone: '',\n            workPhone: '',\n            cellPhone: '',\n            address: '',\n            bio: '',\n            hobbies: []\n          };\n        } else {\n          global.Profile = json;\n        }\n      }).then(function () {\n        console.log(global.Token);\n        console.log(global.User);\n        console.log(global.Profile);\n        console.log(global.Profile.homePhone);\n\n        if (global.Profile.homePhone === '') {\n          navigation.navigate('CreateUpdateProfile', {\n            action: 'Create'\n          });\n        } else {\n          navigation.dispatch(StackActions.replace('Dashboard'));\n        }\n      });\n    }\n  };\n\n  var _getUser = function _getUser(tok) {\n    return fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tok\n      }\n    });\n  };\n\n  var _getProfile = function _getProfile(tok) {\n    return fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tok\n      }\n    });\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Welcome Back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPasswordScreen');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onLoginPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.dispatch(StackActions.replace('RegisterScreen'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/LoginScreen.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","global","StackActions","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","_onLoginPressed","emailError","passwordError","token","data","fetch","method","headers","body","JSON","stringify","then","response","json","success","undefined","Token","_getUser","res","User","_getProfile","Profile","homePhone","workPhone","cellPhone","address","bio","hobbies","console","log","navigate","action","dispatch","replace","tok","text","styles","forgotPassword","label","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport BackButton from '../components/BackButton';\nimport { theme } from '../core/theme';\nimport { emailValidator, passwordValidator } from '../core/utils';\nimport global from '../global.js';\nimport { StackActions } from '@react-navigation/native';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n\n  const _onLoginPressed = () => {\n\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    } else {\n      var token = '';\n      var data = {\n        email: email.value,\n        password: password.value\n      }\n      fetch('http://159.89.153.162:5000/api/v1/auth/login', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then((response) => response.json())\n      .then((json) => {\n        if (json.success !== undefined && json.success === false) {\n          if (json.error === \"Invalid credentials - username.\") {\n            setEmail({ value: email.value , error: 'Invalid Email' });\n          } else if (json.error === \"Invalid credentials - password.\") {\n            setPassword({ value: password.value, error: 'Invalid Password' });\n          }\n        } else {\n          global.Token = json.token;\n        }\n      }).then(() => {\n        return _getUser(global.Token);\n      }).then((res) => res.json())\n      .then((json) =>  {\n        global.User = json.data;\n      }).then(() => {\n        return _getProfile(global.Token);\n      }).then((res) => res.json())\n      .then((json) => {\n        if (json.success !== undefined && json.success === false) {\n          global.Profile = {homePhone: '', workPhone: '', cellPhone: '', address: '', bio: '', hobbies: []};\n        } else {\n          global.Profile = json;\n        }\n      }).then(() => {\n        console.log(global.Token);\n        console.log(global.User);\n        console.log(global.Profile);\n        console.log(global.Profile.homePhone);\n\n        if (global.Profile.homePhone === '') {\n          navigation.navigate('CreateUpdateProfile', { action: 'Create' });\n        } else {\n         /*  navigation.navigate('Dashboard'); */\n         navigation.dispatch(\n           StackActions.replace('Dashboard')\n         )\n        }\n      });\n    }\n  };\n\n  const _getUser = (tok) => {\n    return fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tok\n      }\n    });\n  }\n\n  const _getProfile = (tok) => {\n    return fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + tok\n      }\n    });\n  }\n\n  return (\n    <Background>\n      <Header>Welcome Back.</Header>\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ForgotPasswordScreen')}\n        >\n          <Text style={styles.label}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n\n      <Button mode=\"contained\" onPress={_onLoginPressed}>\n        Login\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.dispatch(\n          StackActions.replace('RegisterScreen')\n          )}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  label: {\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}