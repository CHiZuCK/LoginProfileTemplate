{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\UpdateUserInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { nameValidator, emailValidator, passwordValidator } from \"../core/utils\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport global from \"../global.js\";\n\nvar UpdateUserInformation = function UpdateUserInformation(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState({\n    value: global.User.firstName,\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstname = _useState2[0],\n      setFirstName = _useState2[1];\n\n  var _useState3 = useState({\n    value: global.User.lastName,\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState({\n    value: global.User.middleName,\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      middlename = _useState6[0],\n      setMiddleName = _useState6[1];\n\n  var _useState7 = useState({\n    value: global.User.email,\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      updateuserpass = _useState10[0],\n      setUpdateUserPass = _useState10[1];\n\n  var _useState11 = useState({\n    value: global.User.homePhone,\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      homephone = _useState12[0],\n      setHomePhone = _useState12[1];\n\n  var _useState13 = useState({\n    value: global.User.workPhone,\n    error: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      workphone = _useState14[0],\n      setWorkPhone = _useState14[1];\n\n  var _useState15 = useState({\n    value: global.User.cellPhone,\n    error: ''\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cellphone = _useState16[0],\n      setCellPhone = _useState16[1];\n\n  var _useState17 = useState({\n    value: global.User.address,\n    error: ''\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      address = _useState18[0],\n      setAddress = _useState18[1];\n\n  var _updateUser = function _updateUser() {\n    var firstNameError = nameValidator(firstname.value);\n    var lastNameError = nameValidator(lastname.value);\n    var middleNameError = nameValidator(middlename.value);\n    var emailError = emailValidator(email.value);\n    var updateuserpassError = passwordValidator(updateuserpass.value);\n    var homePhoneError = nameValidator(homephone.value);\n    var workPhoneError = nameValidator(workphone.value);\n    var cellPhoneError = nameValidator(cellphone.value);\n    var addressError = nameValidator(address.value);\n\n    if (firstNameError || lastNameError || middleNameError || homePhoneError || workPhoneError || cellPhoneError || addressError || emailError || updateuserpassError) {\n      setFirstName(_objectSpread(_objectSpread({}, firstname), {}, {\n        error: firstNameError\n      }));\n      setMiddleName(_objectSpread(_objectSpread({}, middlename), {}, {\n        error: middleNameError\n      }));\n      setLastName(_objectSpread(_objectSpread({}, lastname), {}, {\n        error: lastNameError\n      }));\n      setHomePhone(_objectSpread(_objectSpread({}, homephone), {}, {\n        error: homePhoneError\n      }));\n      setWorkPhone(_objectSpread(_objectSpread({}, workphone), {}, {\n        error: workPhoneError\n      }));\n      setCellPhone(_objectSpread(_objectSpread({}, cellphone), {}, {\n        error: cellPhoneError\n      }));\n      setAddress(_objectSpread(_objectSpread({}, address), {}, {\n        error: addressError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setUpdateUserPass(_objectSpread(_objectSpread({}, updateuserpass), {}, {\n        error: updateuserpassError\n      }));\n      return;\n    } else {\n      var data = {\n        firstName: firstname.value,\n        middleName: middlename.value,\n        lastName: lastname.value,\n        email: email,\n        password: updateuserpass.value,\n        homePhone: homephone.value,\n        workPhone: workphone.value,\n        cellPhone: cellphone.value,\n        address: address.value\n      };\n      fetch('http://159.89.153.162:5000/api/v1/auth/updatedetails', {\n        method: 'PUT',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify(data)\n      });\n    }\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Update User\"), React.createElement(TextInput, {\n    label: \"First Name\",\n    returnKeyType: \"next\",\n    value: firstname.value,\n    onChangeText: function onChangeText(text) {\n      return setFirstName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!firstname.error,\n    errorText: firstname.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Middle Name\",\n    returnKeyType: \"next\",\n    value: middlename.value,\n    onChangeText: function onChangeText(text) {\n      return setMiddleName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!middlename.error,\n    errorText: middlename.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Last Name\",\n    returnKeyType: \"next\",\n    value: lastname.value,\n    onChangeText: function onChangeText(text) {\n      return setLastName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!lastname.error,\n    errorText: lastname.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: updateuserpass.value,\n    onChangeText: function onChangeText(text) {\n      return setUpdateUserPass({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!updateuserpass.error,\n    errorText: updateuserpass.error,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Home Phone\",\n    returnKeyType: \"next\",\n    value: homephone.value,\n    onChangeText: function onChangeText(text) {\n      return setHomePhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!homephone.error,\n    errorText: homephone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Work Phone\",\n    returnKeyType: \"next\",\n    value: workphone.value,\n    onChangeText: function onChangeText(text) {\n      return setWorkPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!workphone.error,\n    errorText: workphone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Cell Phone\",\n    returnKeyType: \"next\",\n    value: cellphone.value,\n    onChangeText: function onChangeText(text) {\n      return setCellPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!cellphone.error,\n    errorText: cellphone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    label: \"Address\",\n    returnKeyType: \"next\",\n    value: address.value,\n    onChangeText: function onChangeText(text) {\n      return setAddress({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!address.error,\n    errorText: address.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _updateUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Update User\")));\n};\n\nexport default memo(UpdateUserInformation);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/UpdateUserInformation.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","nameValidator","emailValidator","passwordValidator","global","UpdateUserInformation","navigation","route","value","User","firstName","error","firstname","setFirstName","lastName","lastname","setLastName","middleName","middlename","setMiddleName","email","setEmail","updateuserpass","setUpdateUserPass","homePhone","homephone","setHomePhone","workPhone","workphone","setWorkPhone","cellPhone","cellphone","setCellPhone","address","setAddress","_updateUser","firstNameError","lastNameError","middleNameError","emailError","updateuserpassError","homePhoneError","workPhoneError","cellPhoneError","addressError","data","password","fetch","method","headers","Accept","Authorization","token","body","JSON","stringify","text"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport {\r\n  nameValidator,\r\n  emailValidator,\r\n  passwordValidator,\r\n} from '../core/utils';\r\nimport { Image, Text, ScrollView, View } from 'react-native';\r\nimport global from '../global.js';\r\n\r\nconst UpdateUserInformation = ({ navigation, route }) => {\r\n  const [firstname, setFirstName] = useState({\r\n    value: global.User.firstName,\r\n    error: '',\r\n  });\r\n  const [lastname, setLastName] = useState({\r\n    value: global.User.lastName,\r\n    error: '',\r\n  });\r\n  const [middlename, setMiddleName] = useState({\r\n    value: global.User.middleName,\r\n    error: '',\r\n  });\r\n  const [email, setEmail] = useState({ value: global.User.email, error: '' });\r\n  const [updateuserpass, setUpdateUserPass] = useState({\r\n    value: '',\r\n    error: '',\r\n  });\r\n  const [homephone, setHomePhone] = useState({\r\n    value: global.User.homePhone,\r\n    error: '',\r\n  });\r\n  const [workphone, setWorkPhone] = useState({\r\n    value: global.User.workPhone,\r\n    error: '',\r\n  });\r\n  const [cellphone, setCellPhone] = useState({\r\n    value: global.User.cellPhone,\r\n    error: '',\r\n  });\r\n  const [address, setAddress] = useState({\r\n    value: global.User.address,\r\n    error: '',\r\n  });\r\n\r\n  const _updateUser = () => {\r\n    const firstNameError = nameValidator(firstname.value);\r\n    const lastNameError = nameValidator(lastname.value);\r\n    const middleNameError = nameValidator(middlename.value);\r\n    const emailError = emailValidator(email.value);\r\n    const updateuserpassError = passwordValidator(updateuserpass.value);\r\n    const homePhoneError = nameValidator(homephone.value);\r\n    const workPhoneError = nameValidator(workphone.value);\r\n    const cellPhoneError = nameValidator(cellphone.value);\r\n    const addressError = nameValidator(address.value);\r\n\r\n    if (\r\n      firstNameError ||\r\n      lastNameError ||\r\n      middleNameError ||\r\n      homePhoneError ||\r\n      workPhoneError ||\r\n      cellPhoneError ||\r\n      addressError ||\r\n      emailError ||\r\n      updateuserpassError\r\n    ) {\r\n      setFirstName({ ...firstname, error: firstNameError });\r\n      setMiddleName({ ...middlename, error: middleNameError });\r\n      setLastName({ ...lastname, error: lastNameError });\r\n      setHomePhone({ ...homephone, error: homePhoneError });\r\n      setWorkPhone({ ...workphone, error: workPhoneError });\r\n      setCellPhone({ ...cellphone, error: cellPhoneError });\r\n      setAddress({ ...address, error: addressError });\r\n      setEmail({ ...email, error: emailError });\r\n      setUpdateUserPass({ ...updateuserpass, error: updateuserpassError });\r\n      return;\r\n    } else {\r\n      var data = {\r\n        firstName: firstname.value,\r\n        middleName: middlename.value,\r\n        lastName: lastname.value,\r\n        email: email,\r\n        password: updateuserpass.value,\r\n        homePhone: homephone.value,\r\n        workPhone: workphone.value,\r\n        cellPhone: cellphone.value,\r\n        address: address.value,\r\n      };\r\n      fetch('http://159.89.153.162:5000/api/v1/auth/updatedetails', {\r\n        method: 'PUT',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <ScrollView>\r\n        <Header>Update User</Header>\r\n        <TextInput\r\n          label=\"First Name\"\r\n          returnKeyType=\"next\"\r\n          value={firstname.value}\r\n          onChangeText={text => setFirstName({ value: text, error: '' })}\r\n          error={!!firstname.error}\r\n          errorText={firstname.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Middle Name\"\r\n          returnKeyType=\"next\"\r\n          value={middlename.value}\r\n          onChangeText={text => setMiddleName({ value: text, error: '' })}\r\n          error={!!middlename.error}\r\n          errorText={middlename.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Last Name\"\r\n          returnKeyType=\"next\"\r\n          value={lastname.value}\r\n          onChangeText={text => setLastName({ value: text, error: '' })}\r\n          error={!!lastname.error}\r\n          errorText={lastname.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Email\"\r\n          returnKeyType=\"next\"\r\n          value={email.value}\r\n          onChangeText={text => setEmail({ value: text, error: '' })}\r\n          error={!!email.error}\r\n          errorText={email.error}\r\n          autoCapitalize=\"none\"\r\n          autoCompleteType=\"email\"\r\n          textContentType=\"emailAddress\"\r\n          keyboardType=\"email-address\"\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Password\"\r\n          returnKeyType=\"done\"\r\n          value={updateuserpass.value}\r\n          onChangeText={text => setUpdateUserPass({ value: text, error: '' })}\r\n          error={!!updateuserpass.error}\r\n          errorText={updateuserpass.error}\r\n          secureTextEntry\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Home Phone\"\r\n          returnKeyType=\"next\"\r\n          value={homephone.value}\r\n          onChangeText={text => setHomePhone({ value: text, error: '' })}\r\n          error={!!homephone.error}\r\n          errorText={homephone.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Work Phone\"\r\n          returnKeyType=\"next\"\r\n          value={workphone.value}\r\n          onChangeText={text => setWorkPhone({ value: text, error: '' })}\r\n          error={!!workphone.error}\r\n          errorText={workphone.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Cell Phone\"\r\n          returnKeyType=\"next\"\r\n          value={cellphone.value}\r\n          onChangeText={text => setCellPhone({ value: text, error: '' })}\r\n          error={!!cellphone.error}\r\n          errorText={cellphone.error}\r\n        />\r\n\r\n        <TextInput\r\n          label=\"Address\"\r\n          returnKeyType=\"next\"\r\n          value={address.value}\r\n          onChangeText={text => setAddress({ value: text, error: '' })}\r\n          error={!!address.error}\r\n          errorText={address.error}\r\n        />\r\n\r\n        <Button mode=\"outlined\" onPress={_updateUser}>\r\n          Update User\r\n        </Button>\r\n      </ScrollView>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default memo(UpdateUserInformation);\r\n"]},"metadata":{},"sourceType":"module"}