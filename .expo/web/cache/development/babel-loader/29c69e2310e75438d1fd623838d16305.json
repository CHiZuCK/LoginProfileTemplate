{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\CreateUpdateProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport TextArea from \"../components/TextArea.js\";\nimport { nameValidator, emailValidator, passwordValidator } from \"../core/utils\";\n\nvar CreateUpdateProfile = function CreateUpdateProfile(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var action = route.params.action;\n\n  var _useState = useState({\n    value: profile.homePhone,\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      homephone = _useState2[0],\n      setHomePhone = _useState2[1];\n\n  var _useState3 = useState({\n    value: profile.workPhone,\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      workphone = _useState4[0],\n      setWorkPhone = _useState4[1];\n\n  var _useState5 = useState({\n    value: profile.cellPhone,\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cellphone = _useState6[0],\n      setCellPhone = _useState6[1];\n\n  var _useState7 = useState({\n    value: profile.address,\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  var _useState9 = useState({\n    value: profile.bio,\n    error: ''\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      bio = _useState10[0],\n      setBio = _useState10[1];\n\n  var _useState11 = useState({\n    value: profile.hobbies.join(', '),\n    error: ''\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      hobbies = _useState12[0],\n      setHobbies = _useState12[1];\n\n  var _createProfile = function _createProfile() {\n    var homePhoneError = nameValidator(homephone.value);\n    var workPhoneError = nameValidator(workphone.value);\n    var cellPhoneError = nameValidator(cellphone.value);\n    var addressError = nameValidator(address.value);\n    var bioError = nameValidator(bio.value);\n    var hobbiesArray = hobbies.value.split(', ');\n\n    if (homePhoneError || workPhoneError || cellPhoneError || addressError || bioError) {\n      setHomePhone(_objectSpread(_objectSpread({}, homephone), {}, {\n        error: homePhoneError\n      }));\n      setWorkPhone(_objectSpread(_objectSpread({}, workphone), {}, {\n        error: workPhoneError\n      }));\n      setCellPhone(_objectSpread(_objectSpread({}, cellphone), {}, {\n        error: cellPhoneError\n      }));\n      setAddress(_objectSpread(_objectSpread({}, address), {}, {\n        error: addressError\n      }));\n      setBio(_objectSpread(_objectSpread({}, bio), {}, {\n        error: bioError\n      }));\n      return;\n    } else {\n      var data = {\n        cellPhone: cellphone.value,\n        homePhone: homephone.value,\n        workPhone: workphone.value,\n        address: address.value,\n        bio: bio.value,\n        hobbies: hobbiesArray\n      };\n      fetch('http://159.89.153.162:5000/api/v1/profile', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify(data)\n      });\n    }\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, action, \" Profile\"), React.createElement(TextInput, {\n    label: \"Home Phone\",\n    returnKeyType: \"next\",\n    value: homephone.value,\n    onChangeText: function onChangeText(text) {\n      return setHomePhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!homephone.error,\n    errorText: homephone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Work Phone\",\n    returnKeyType: \"next\",\n    value: workphone.value,\n    onChangeText: function onChangeText(text) {\n      return setWorkPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!workphone.error,\n    errorText: workphone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Cell Phone\",\n    returnKeyType: \"next\",\n    value: cellphone.value,\n    onChangeText: function onChangeText(text) {\n      return setCellPhone({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!cellphone.error,\n    errorText: cellphone.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    label: \"Address\",\n    returnKeyType: \"next\",\n    value: address.value,\n    onChangeText: function onChangeText(text) {\n      return setAddress({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!address.error,\n    errorText: address.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(TextArea, {\n    label: \"Bio\",\n    returnKeyType: \"next\",\n    value: bio.value,\n    onChangeText: function onChangeText(text) {\n      return setBio({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!bio.error,\n    errorText: bio.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(TextArea, {\n    label: \"Hobbies\",\n    returnKeyType: \"next\",\n    value: hobbies.value,\n    onChangeText: function onChangeText(text) {\n      return setHobbies({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!hobbies.error,\n    errorText: hobbies.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _createProfile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, action, \" Profile\"));\n};\n\nexport default memo(CreateUpdateProfile);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/CreateUpdateProfile.js"],"names":["React","memo","useState","Background","Logo","Header","Paragraph","Button","TextInput","TextArea","nameValidator","emailValidator","passwordValidator","CreateUpdateProfile","navigation","route","action","params","value","profile","homePhone","error","homephone","setHomePhone","workPhone","workphone","setWorkPhone","cellPhone","cellphone","setCellPhone","address","setAddress","bio","setBio","hobbies","join","setHobbies","_createProfile","homePhoneError","workPhoneError","cellPhoneError","addressError","bioError","hobbiesArray","split","data","fetch","method","headers","token","body","JSON","stringify","text"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Paragraph from '../components/Paragraph';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport TextArea from '../components/TextArea.js';\r\nimport { nameValidator, emailValidator, passwordValidator } from '../core/utils';\r\n\r\nconst CreateUpdateProfile = ({ navigation, route }) => {\r\n    const { action } = route.params;\r\n\r\n    const [homephone, setHomePhone] = useState({ value: profile.homePhone, error: '' });\r\n    const [workphone, setWorkPhone] = useState({ value: profile.workPhone, error: '' });\r\n    const [cellphone, setCellPhone] = useState({ value: profile.cellPhone, error: '' });\r\n    const [address, setAddress] = useState({ value: profile.address, error: '' });\r\n    const [bio, setBio] = useState({ value: profile.bio, error: '' });\r\n    const [hobbies, setHobbies] = useState({ value: profile.hobbies.join(', '), error: '' });\r\n  \r\n    const _createProfile = () => {\r\n        const homePhoneError = nameValidator(homephone.value); //Change to validate phone\r\n        const workPhoneError = nameValidator(workphone.value); //Change to validate phone\r\n        const cellPhoneError = nameValidator(cellphone.value); //Change to validate phone\r\n        const addressError = nameValidator(address.value); //Change to validate address\r\n        const bioError = nameValidator(bio.value); //Change to validate bio\r\n\r\n        var hobbiesArray = hobbies.value.split(', ');\r\n\r\n        if (homePhoneError || workPhoneError || cellPhoneError || addressError || bioError) {\r\n            setHomePhone({ ...homephone, error: homePhoneError });\r\n            setWorkPhone({ ...workphone, error: workPhoneError });\r\n            setCellPhone({ ...cellphone, error: cellPhoneError });\r\n            setAddress({ ...address, error: addressError });\r\n            setBio({ ...bio, error: bioError });\r\n            return;\r\n        } else {\r\n            var data = {\r\n                cellPhone: cellphone.value,\r\n                homePhone: homephone.value,\r\n                workPhone: workphone.value,\r\n                address: address.value,\r\n                bio: bio.value,\r\n                hobbies: hobbiesArray\r\n            }\r\n            fetch('http://159.89.153.162:5000/api/v1/profile', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Background>\r\n            <Logo />\r\n            <Header>{action} Profile</Header>\r\n            <TextInput\r\n                label=\"Home Phone\"\r\n                returnKeyType=\"next\"\r\n                value={homephone.value}\r\n                onChangeText={text => setHomePhone({ value: text, error: '' })}\r\n                error={!!homephone.error}\r\n                errorText={homephone.error}\r\n            />\r\n\r\n            <TextInput\r\n                label=\"Work Phone\"\r\n                returnKeyType=\"next\"\r\n                value={workphone.value}\r\n                onChangeText={text => setWorkPhone({ value: text, error: '' })}\r\n                error={!!workphone.error}\r\n                errorText={workphone.error}\r\n            />\r\n\r\n            <TextInput\r\n                label=\"Cell Phone\"\r\n                returnKeyType=\"next\"\r\n                value={cellphone.value}\r\n                onChangeText={text => setCellPhone({ value: text, error: '' })}\r\n                error={!!cellphone.error}\r\n                errorText={cellphone.error}\r\n            />\r\n\r\n            <TextInput\r\n                label=\"Address\"\r\n                returnKeyType=\"next\"\r\n                value={address.value}\r\n                onChangeText={text => setAddress({ value: text, error: '' })}\r\n                error={!!address.error}\r\n                errorText={address.error}\r\n            />\r\n\r\n            <TextArea\r\n                label=\"Bio\"\r\n                returnKeyType=\"next\"\r\n                value={bio.value}\r\n                onChangeText={text => setBio({ value: text, error: '' })}\r\n                error={!!bio.error}\r\n                errorText={bio.error}\r\n            />\r\n\r\n            <TextArea\r\n                label=\"Hobbies\"\r\n                returnKeyType=\"next\"\r\n                value={hobbies.value}\r\n                onChangeText={text => setHobbies({ value: text, error: '' })}\r\n                error={!!hobbies.error}\r\n                errorText={hobbies.error}\r\n            />\r\n\r\n            <Button mode=\"outlined\" onPress={_createProfile}>\r\n                {action} Profile\r\n            </Button>\r\n        </Background>\r\n    );\r\n  }\r\n  \r\n  export default memo(CreateUpdateProfile);"]},"metadata":{},"sourceType":"module"}