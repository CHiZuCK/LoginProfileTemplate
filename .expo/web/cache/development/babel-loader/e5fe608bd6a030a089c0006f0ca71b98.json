{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\RegisterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { StackActions } from '@react-navigation/native';\nimport { emailValidator, passwordValidator, nameValidator } from \"../core/utils\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastName = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(name.value);\n    var lastNameError = nameValidator(lastname.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError || lastNameError) {\n      setName(_objectSpread(_objectSpread({}, name), {}, {\n        error: nameError\n      }));\n      setLastName(_objectSpread(_objectSpread({}, lastname), {}, {\n        error: lastNameError\n      }));\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    } else {\n      var data = {\n        firstName: name.value,\n        lastName: lastname.value,\n        email: email.value,\n        password: password.value\n      };\n      fetch('http://159.89.153.162:5000/api/v1/auth/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      navigation.dispatch(StackActions.replace('Login'));\n    }\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Create Account\"), React.createElement(TextInput, {\n    label: \"Name\",\n    returnKeyType: \"next\",\n    value: name.value,\n    onChangeText: function onChangeText(text) {\n      return setName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!name.error,\n    errorText: name.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Last Name\",\n    returnKeyType: \"next\",\n    value: lastname.value,\n    onChangeText: function onChangeText(text) {\n      return setLastName({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!lastname.error,\n    errorText: lastname.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onSignUpPressed,\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Already have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.dispatch(StackActions.replace('LoginScreen'));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(RegisterScreen);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/RegisterScreen.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","StackActions","emailValidator","passwordValidator","nameValidator","RegisterScreen","navigation","value","error","name","setName","lastname","setLastName","email","setEmail","password","setPassword","_onSignUpPressed","nameError","lastNameError","emailError","passwordError","data","firstName","lastName","fetch","method","headers","body","JSON","stringify","dispatch","replace","text","styles","button","row","label","link","StyleSheet","create","color","colors","secondary","marginTop","flexDirection","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport BackButton from '../components/BackButton';\nimport { theme } from '../core/theme';\nimport { StackActions } from '@react-navigation/native';\nimport {\n  emailValidator,\n  passwordValidator,\n  nameValidator,\n} from '../core/utils';\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState({ value: '', error: '' });\n  const [lastname, setLastName] = useState({ value: '', error: '' });\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n\n  const _onSignUpPressed = () => {\n    const nameError = nameValidator(name.value);\n    const lastNameError = nameValidator(lastname.value);\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError || lastNameError) {\n      setName({ ...name, error: nameError });\n      setLastName({...lastname, error: lastNameError });\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    } else {\n      var data = {\n        firstName: name.value,\n        lastName: lastname.value,\n        email: email.value,\n        password: password.value\n      }\n      fetch('http://159.89.153.162:5000/api/v1/auth/register', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      navigation.dispatch(\n        StackActions.replace('Login')\n        );\n    }\n  };\n\n  return (\n    <Background>\n      <Header>Create Account</Header>\n\n      <TextInput\n        label=\"Name\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={text => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n\n      <TextInput\n        label=\"Last Name\"\n        returnKeyType=\"next\"\n        value={lastname.value}\n        onChangeText={text => setLastName({ value: text, error: '' })}\n        error={!!lastname.error}\n        errorText={lastname.error}\n      />\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <Button mode=\"contained\" onPress={_onSignUpPressed} style={styles.button}>\n        Sign Up\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.dispatch(\n          StackActions.replace('LoginScreen')\n          )}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary,\n  },\n  button: {\n    marginTop: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(RegisterScreen);\n"]},"metadata":{},"sourceType":"module"}