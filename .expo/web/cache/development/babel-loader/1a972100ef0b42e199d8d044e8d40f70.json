{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\Dashboard.js\";\nimport React, { memo, useState } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      photo = _useState2[0],\n      setPhoto = _useState2[1];\n\n  var _logout = function _logout() {\n    fetch('http://159.89.153.162:5000/api/v1/auth/logout', {\n      method: 'GET'\n    });\n    global.Token = '';\n    navigation.navigate('Home');\n  };\n\n  var _getUserAndNavigate = function _getUserAndNavigate() {\n    fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n      navigation.navigate('UpdateUserInformation', {\n        user: json.data\n      });\n    });\n  };\n\n  var _getProfileAndNavigate = function _getProfileAndNavigate() {\n    fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (json.success !== undefined && json.success === false) {\n        navigation.navigate('CreateUpdateProfile', {\n          action: 'Create'\n        });\n      } else {\n        navigation.navigate('CreateUpdateProfile', {\n          action: 'Update'\n        });\n      }\n    });\n  };\n\n  var _handleChoosePhoto = function _handleChoosePhoto() {\n    var result;\n    return _regeneratorRuntime.async(function _handleChoosePhoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setPhoto(result);\n            }\n\n            console.log(result);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var _getPhoto = function _getPhoto() {\n    fetch('http://159.89.153.162:5000/api/v1/profile/0001/photo', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    });\n  };\n\n  var _uploadPhoto = function _uploadPhoto() {\n    var data = new FormData();\n    data.append('file', {\n      uri: photo.uri,\n      type: 'image/jpeg',\n      name: 'photo.jpg'\n    });\n    fetch('http://159.89.153.162:5000/api/v1/profile/0001/photo', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'multipart/form-data;',\n        'Authorization': 'Bearer ' + global.Token\n      },\n      body: data\n    });\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Let\\u2019s start\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Logout\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _getUserAndNavigate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Update User\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _getProfileAndNavigate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Create/Update Profile\"), photo && React.createElement(Image, {\n    source: {\n      uri: photo.uri\n    },\n    style: {\n      width: 300,\n      height: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _handleChoosePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Choose Photo\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _uploadPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"Send Photo\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _getPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Get Photo\"));\n};\n\nexport default memo(Dashboard);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/Dashboard.js"],"names":["React","memo","useState","Background","Logo","Header","Paragraph","Button","ImagePicker","Dashboard","navigation","route","photo","setPhoto","_logout","fetch","method","global","Token","navigate","_getUserAndNavigate","headers","then","response","json","console","log","user","data","_getProfileAndNavigate","success","undefined","action","_handleChoosePhoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","_getPhoto","_uploadPhoto","FormData","append","uri","type","name","body","width","height"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Paragraph from '../components/Paragraph';\nimport Button from '../components/Button';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Image, Platform } from 'react-native';\n\n\nconst Dashboard = ({ navigation, route }) => {\n\n  const [photo, setPhoto] = useState(null);\n\n  const _logout = () => {\n    fetch('http://159.89.153.162:5000/api/v1/auth/logout', {\n      method: 'GET'\n    });\n    global.Token = '';\n    navigation.navigate('Home');\n  }\n\n  const _getUserAndNavigate = () => {\n    fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    }).then((response) => response.json())\n    .then((json) => {\n      console.log(json);\n      navigation.navigate('UpdateUserInformation', { user: json.data });\n    });\n  }\n\n  const _getProfileAndNavigate = () => {\n    fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    }).then((response) => response.json())\n    .then((json) => {\n      if (json.success !== undefined && json.success === false) {\n        navigation.navigate('CreateUpdateProfile', { action: 'Create' });\n      } else {\n        navigation.navigate('CreateUpdateProfile', { action: 'Update' });\n      }\n    });\n  }\n\n  const _handleChoosePhoto = async () => {\n    try {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      if (!result.cancelled) {\n        setPhoto(result);\n      }\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const _getPhoto = () => {\n    fetch('http://159.89.153.162:5000/api/v1/profile/0001/photo', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + global.Token\n      }\n    });\n  }\n\n  const _uploadPhoto = () => {\n    var data = new FormData();\n    data.append('file', {\n      uri: photo.uri,\n      type: 'image/jpeg',\n      name: 'photo.jpg'\n    });\n    fetch('http://159.89.153.162:5000/api/v1/profile/0001/photo', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'multipart/form-data;',\n        'Authorization': 'Bearer ' + global.Token\n      },\n      body: data\n    });\n  }\n\n  return (\n    <Background>\n      <Header>Let’s start</Header>\n      <Button mode=\"outlined\" onPress={_logout}>\n        Logout\n      </Button>\n      <Button mode=\"outlined\" onPress={_getUserAndNavigate}>\n        Update User\n      </Button>\n      <Button mode=\"outlined\" onPress={_getProfileAndNavigate}>\n        Create/Update Profile\n      </Button>\n      {photo && (\n        <Image\n          source={{ uri: photo.uri }}\n          style={{ width: 300, height: 300 }}\n        />\n      )}\n      <Button mode=\"outlined\" onPress={_handleChoosePhoto}>\n        Choose Photo\n      </Button>\n      <Button mode=\"outlined\" onPress={_uploadPhoto}>\n        Send Photo\n      </Button>\n      <Button mode=\"outlined\" onPress={_getPhoto}>\n        Get Photo\n      </Button>\n    </Background>\n  );\n}\n\nexport default memo(Dashboard);\n"]},"metadata":{},"sourceType":"module"}