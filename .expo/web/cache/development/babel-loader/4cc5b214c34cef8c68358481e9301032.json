{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\ContactsScreen.js\";\nimport React, { memo, useState, useEffect } from 'react';\nimport Background from \"../components/Background\";\nimport Button from \"../components/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport global from \"../global.js\";\nimport { theme } from \"../core/theme\";\n\nvar ContactScreen = function ContactScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _refreshList = function _refreshList() {\n    fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + global.Token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json.contacts);\n      setData(json);\n    });\n  };\n\n  var _navigateCreateContact = function _navigateCreateContact() {\n    return _regeneratorRuntime.async(function _navigateCreateContact$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            navigation.navigate('CreateContactScreen');\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, data[0].firstName), React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _navigateCreateContact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"New Contact\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _refreshList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Refresh\")));\n};\n\nexport default memo(ContactScreen);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/ContactsScreen.js"],"names":["React","memo","useState","useEffect","Background","Button","ImagePicker","global","theme","ContactScreen","navigation","route","_refreshList","fetch","method","headers","Accept","Authorization","Token","then","response","json","console","log","contacts","setData","_navigateCreateContact","navigate","data","firstName","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;;;;;AAEA,OAAOC,MAAP;AAEA,SAASC,KAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAE7C,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBC,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,MAAAA,MAAM,EAAE,KAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,aAAa,EAAE,YAAYV,MAAM,CAACW;AAH3B;AAF2C,KAAjD,CAAL,CAQGC,IARH,CAQQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KARhB,EASGF,IATH,CASQ,UAAAE,IAAI,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,QAAjB;AACAC,MAAAA,OAAO,CAACJ,IAAD,CAAP;AACD,KAZH;AAaH,GAdD;;AAgBA,MAAMK,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAC3BhB,YAAAA,UAAU,CAACiB,QAAX,CAAoB,qBAApB;;AAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAlB6C,kBAsBrBzB,QAAQ,CAAC,EAAD,CAtBa;AAAA;AAAA,MAsBtC0B,IAtBsC;AAAA,MAsBhCH,OAtBgC;;AAwB7C,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,IAAI,CAAC,CAAD,CAAJ,CAAQC,SADb,CADJ,EAIE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAID,IADV;AAEE,IAAA,UAAU,EAAI;AAAA,UAAGE,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACI,QAAA,KAAK,EAAIA,IAAI,CAACD,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAYE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAEH,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,EAeE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAEd,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CADF,CADF;AAuBH,CA/CD;;AAiDA,eAAeX,IAAI,CAACQ,aAAD,CAAnB","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\r\nimport Background from '../components/Background';\r\nimport Button from '../components/Button';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Text, ScrollView, View, FlatList, TouchableOpacity } from 'react-native';\r\nimport global from '../global.js';\r\n\r\nimport { theme } from '../core/theme';\r\n\r\nconst ContactScreen = ({ navigation, route }) => {\r\n\r\n    const _refreshList = () => {\r\n        fetch('http://159.89.153.162:5000/api/v1/profile/me', {\r\n          method: 'GET',\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: 'Bearer ' + global.Token,\r\n          },\r\n        })\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            console.log(json.contacts);\r\n            setData(json);\r\n          });\r\n    };\r\n\r\n    const _navigateCreateContact = async () => {\r\n        navigation.navigate('CreateContactScreen');\r\n    };\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    return (\r\n      <Background>\r\n        <ScrollView>\r\n            <Text>\r\n                {data[0].firstName}\r\n            </Text>\r\n          <FlatList\r\n            data = {data}\r\n            renderItem = {({ item }) => (\r\n                <ListItem\r\n                    title = {item.firstName}\r\n                />\r\n            )}\r\n          />\r\n          <Button mode=\"outlined\" onPress={_navigateCreateContact}>\r\n            New Contact\r\n          </Button>\r\n          <Button mode=\"outlined\" onPress={_refreshList}>\r\n            Refresh\r\n          </Button>\r\n        </ScrollView>\r\n      </Background>\r\n    );\r\n};\r\n\r\nexport default memo(ContactScreen);\r\n"]},"metadata":{},"sourceType":"module"}