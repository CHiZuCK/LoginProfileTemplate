{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Documents\\\\Code\\\\React Native\\\\LoginProfileTemplate\\\\src\\\\screens\\\\Dashboard.js\";\nimport React, { memo, useState } from 'react';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\n\nvar Dashboard = function Dashboard(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var token = route.params.token;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      photo = _useState2[0],\n      setPhoto = _useState2[1];\n\n  var _logout = function _logout() {\n    fetch('http://159.89.153.162:5000/api/v1/auth/logout', {\n      method: 'GET'\n    });\n    navigation.navigate('Home');\n  };\n\n  var _getUserAndNavigate = function _getUserAndNavigate() {\n    fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      console.log(json);\n      navigation.navigate('UpdateUserInformation', {\n        token: token,\n        user: json.data\n      });\n    });\n  };\n\n  var _getProfileAndNavigate = function _getProfileAndNavigate() {\n    fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      if (json.success !== undefined && json.success === false) {\n        navigation.navigate('CreateUpdateProfile', {\n          token: token,\n          profile: {\n            homePhone: '',\n            workPhone: '',\n            cellPhone: '',\n            address: '',\n            bio: '',\n            hobbies: []\n          },\n          action: 'Create'\n        });\n      } else {\n        navigation.navigate('CreateUpdateProfile', {\n          token: token,\n          profile: json,\n          action: 'Update'\n        });\n      }\n    });\n  };\n\n  var _handleChoosePhoto = function _handleChoosePhoto() {\n    var options = {\n      noData: true\n    };\n    ImagePicker.launchImageLibrary(options, function (response) {\n      if (response.uri) {\n        setPhoto(response);\n      }\n    });\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Let\\u2019s start\"), React.createElement(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Your amazing app starts here. Open you favourite code editor and start editing this project.\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Logout\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _getUserAndNavigate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Update User\"), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _getProfileAndNavigate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Create/Update Profile\"), photo && React.createElement(Image, {\n    source: {\n      uri: photo.uri\n    },\n    style: {\n      width: 300,\n      height: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    mode: \"outlined\",\n    onPress: _handleChoosePhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Choose Photo\"));\n};\n\nexport default memo(Dashboard);","map":{"version":3,"sources":["C:/Users/stefa/Documents/Code/React Native/LoginProfileTemplate/src/screens/Dashboard.js"],"names":["React","memo","useState","Background","Logo","Header","Paragraph","Button","Dashboard","navigation","route","token","params","photo","setPhoto","_logout","fetch","method","navigate","_getUserAndNavigate","headers","then","response","json","console","log","user","data","_getProfileAndNavigate","success","undefined","profile","homePhone","workPhone","cellPhone","address","bio","hobbies","action","_handleChoosePhoto","options","noData","ImagePicker","launchImageLibrary","uri","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAAA,MAEnCC,KAFmC,GAEzBD,KAAK,CAACE,MAFmB,CAEnCD,KAFmC;;AAAA,kBAIjBT,QAAQ,CAAC,EAAD,CAJS;AAAA;AAAA,MAIpCW,KAJoC;AAAA,MAI7BC,QAJ6B;;AAM3C,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,IAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDC,MAAAA,MAAM,EAAE;AAD6C,KAAlD,CAAL;AAGAR,IAAAA,UAAU,CAACS,QAAX,CAAoB,MAApB;AACD,GALD;;AAOA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCH,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDC,MAAAA,MAAM,EAAE,KADyC;AAEjDG,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB,kBAFT;AAGP,yBAAiB,YAAYT;AAHtB;AAFwC,KAA9C,CAAL,CAOGU,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQCF,IARD,CAQM,UAACE,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAd,MAAAA,UAAU,CAACS,QAAX,CAAoB,uBAApB,EAA6C;AAAEP,QAAAA,KAAK,EAAEA,KAAT;AAAgBe,QAAAA,IAAI,EAAEH,IAAI,CAACI;AAA3B,OAA7C;AACD,KAXD;AAYD,GAbD;;AAeA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnCZ,IAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDC,MAAAA,MAAM,EAAE,KAD4C;AAEpDG,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB,kBAFT;AAGP,yBAAiB,YAAYT;AAHtB;AAF2C,KAAjD,CAAL,CAOGU,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQCF,IARD,CAQM,UAACE,IAAD,EAAU;AACd,UAAIA,IAAI,CAACM,OAAL,KAAiBC,SAAjB,IAA8BP,IAAI,CAACM,OAAL,KAAiB,KAAnD,EAA0D;AACxDpB,QAAAA,UAAU,CAACS,QAAX,CAAoB,qBAApB,EAA2C;AAAEP,UAAAA,KAAK,EAAEA,KAAT;AAAgBoB,UAAAA,OAAO,EAAE;AAACC,YAAAA,SAAS,EAAE,EAAZ;AAAgBC,YAAAA,SAAS,EAAE,EAA3B;AAA+BC,YAAAA,SAAS,EAAE,EAA1C;AAA8CC,YAAAA,OAAO,EAAE,EAAvD;AAA2DC,YAAAA,GAAG,EAAE,EAAhE;AAAoEC,YAAAA,OAAO,EAAE;AAA7E,WAAzB;AAA2GC,UAAAA,MAAM,EAAE;AAAnH,SAA3C;AACD,OAFD,MAEO;AACL7B,QAAAA,UAAU,CAACS,QAAX,CAAoB,qBAApB,EAA2C;AAAEP,UAAAA,KAAK,EAAEA,KAAT;AAAgBoB,UAAAA,OAAO,EAAER,IAAzB;AAA+Be,UAAAA,MAAM,EAAE;AAAvC,SAA3C;AACD;AACF,KAdD;AAeD,GAhBD;;AAkBA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,QAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE;AADM,KAAhB;AAGAC,IAAAA,WAAW,CAACC,kBAAZ,CAA+BH,OAA/B,EAAwC,UAAClB,QAAD,EAAc;AACpD,UAAIA,QAAQ,CAACsB,GAAb,EAAkB;AAChB9B,QAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD;AACF,KAJD;AAKD,GATD;;AAWA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAHF,EAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAEP,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAUE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAEI,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,EAaE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAES,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAbF,EAgBGf,KAAK,IACJ,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAE+B,MAAAA,GAAG,EAAE/B,KAAK,CAAC+B;AAAb,KADV;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAsBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,OAAO,EAAEP,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF,CADF;AA4BD,CArFD;;AAuFA,eAAetC,IAAI,CAACO,SAAD,CAAnB","sourcesContent":["import React, { memo, useState } from 'react';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Paragraph from '../components/Paragraph';\nimport Button from '../components/Button';\n/* import ImagePicker from 'react-native-image-picker'; */\n\nconst Dashboard = ({ navigation, route }) => {\n\n  const { token } = route.params;\n\n  const [photo, setPhoto] = useState('');\n\n  const _logout = () => {\n    fetch('http://159.89.153.162:5000/api/v1/auth/logout', {\n      method: 'GET'\n    });\n    navigation.navigate('Home');\n  }\n\n  const _getUserAndNavigate = () => {\n    fetch('http://159.89.153.162:5000/api/v1/auth/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then((response) => response.json())\n    .then((json) => {\n      console.log(json);\n      navigation.navigate('UpdateUserInformation', { token: token, user: json.data });\n    });\n  }\n\n  const _getProfileAndNavigate = () => {\n    fetch('http://159.89.153.162:5000/api/v1/profile/me', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then((response) => response.json())\n    .then((json) => {\n      if (json.success !== undefined && json.success === false) {\n        navigation.navigate('CreateUpdateProfile', { token: token, profile: {homePhone: '', workPhone: '', cellPhone: '', address: '', bio: '', hobbies: []}, action: 'Create' });\n      } else {\n        navigation.navigate('CreateUpdateProfile', { token: token, profile: json, action: 'Update' });\n      }\n    });\n  }\n\n  const _handleChoosePhoto = () => {\n    const options = {\n      noData: true,\n    };\n    ImagePicker.launchImageLibrary(options, (response) => {\n      if (response.uri) {\n        setPhoto(response);\n      }\n    });\n  };\n\n  return (\n    <Background>\n      <Logo />\n      <Header>Let’s start</Header>\n      <Paragraph>\n        Your amazing app starts here. Open you favourite code editor and start\n        editing this project.\n      </Paragraph>\n      <Button mode=\"outlined\" onPress={_logout}>\n        Logout\n      </Button>\n      <Button mode=\"outlined\" onPress={_getUserAndNavigate}>\n        Update User\n      </Button>\n      <Button mode=\"outlined\" onPress={_getProfileAndNavigate}>\n        Create/Update Profile\n      </Button>\n      {photo && (\n        <Image\n          source={{ uri: photo.uri }}\n          style={{ width: 300, height: 300 }}\n        />\n      )}\n      <Button mode=\"outlined\" onPress={_handleChoosePhoto}>\n        Choose Photo\n      </Button>\n    </Background>\n  );\n}\n\nexport default memo(Dashboard);\n"]},"metadata":{},"sourceType":"module"}